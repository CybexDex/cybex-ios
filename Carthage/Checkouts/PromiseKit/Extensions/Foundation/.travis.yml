os: osx
language: swift

branches:
  only: 
    - master
stages:
  - lint
  - swiftpm
  - carthage
  - test
jobs:
  include:
    - &pod
      stage: lint
      osx_image: xcode8.3
      env: SWIFT=3.1
      before_install:
        gem install cocoapods --prerelease --version 1.7.0.beta.3
      install:
        carthage bootstrap --no-build PromiseKit
      script: |
        cd Carthage/Checkouts/PromiseKit
        mv .github/PromiseKit.podspec .
        rm -rf Extensions/Foundation/Sources
        cp -R ../../../Sources Extensions/Foundation
        pod lib lint --subspec=PromiseKit/Foundation --fail-fast --swift-version=$SWIFT
    - <<: *pod
      osx_image: xcode9.2
      env: SWIFT=3.2
    - <<: *pod
      osx_image: xcode9.4
      env: SWIFT=3.3
    # - <<: *pod
    #   osx_image: xcode10
    #   env: SWIFT=3.4
    - <<: *pod
      osx_image: xcode9.2
      env: SWIFT=4.0
    - <<: *pod
      osx_image: xcode9.4
      env: SWIFT=4.1
    - <<: *pod
      osx_image: xcode10
      env: SWIFT=4.2
    - <<: *pod
      osx_image: xcode10.2
      env: SWIFT=5.0

    - &linux
      stage: swiftpm
      env: SWIFT_BUILD_VERSION=3  SWIFT_VERSION=4.0
      # ^^ we have some source-conditionals for this version
      name: Linux / Swift 3.2.0
      os: linux
      dist: trusty
      sudo: required
      language: generic
      before_install:
        eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      script:
        swift build -Xswiftc -swift-version -Xswiftc $SWIFT_BUILD_VERSION
    - <<: *linux
      env: SWIFT_BUILD_VERSION=3  SWIFT_VERSION=4.0.3
      name: Linux / Swift 3.2.3
    - <<: *linux
      env: SWIFT_BUILD_VERSION=3  SWIFT_VERSION=4.1.2
      name: Linux / Swift 3.3
    - <<: *linux
      env: SWIFT_BUILD_VERSION=3  SWIFT_VERSION=4.2
      name: Linux / Swift 3.4
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4  SWIFT_VERSION=4.0
      name: Linux / Swift 4.0.0
      # ^^ we have some source-conditionals for this version
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4  SWIFT_VERSION=4.0.3
      name: Linux / Swift 4.0.3
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4  SWIFT_VERSION=4.1.2
      name: Linux / Swift 4.1
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4  SWIFT_VERSION=4.2
      name: Linux / Swift 4.2
    - <<: *linux
      env: SWIFT_BUILD_VERSION=5 SWIFT_VERSION=5.0
      name: Linux / Swift 5.0

    - &swiftpm
      stage: swiftpm
      name: Xcode 8.3 / SwiftPM
      os: osx
      osx_image: xcode8.3
      language: objective-c
      script: swift build
    - <<: *swiftpm
      name: Xcode 9.4 / SwiftPM
      osx_image: xcode9.4
    - <<: *swiftpm
      name: Xcode 10.0 / SwiftPM
      osx_image: xcode10
    
    - &carthage
      stage: carthage
      osx_image: xcode9.2
      script: |
        carthage bootstrap --cache-builds
        carthage build --no-skip-current
      cache:
        directories:
        - Carthage
    - <<: *carthage
      osx_image: xcode9.4
    - <<: *carthage
      osx_image: xcode10.1
    - <<: *carthage
      osx_image: xcode10.2

    - &test
      stage: test
      xcode_scheme: PMKFoundation
      xcode_project: PMKFoundation.xcodeproj
      xcode_destination: 'platform=macOS'
      cache:
        directories:
        - Carthage
      before_install: |
        carthage bootstrap --cache-builds --no-use-binaries
        sed -i '' "s/SWIFT_TREAT_WARNINGS_AS_ERRORS = NO;/SWIFT_TREAT_WARNINGS_AS_ERRORS = YES;/" *.xcodeproj/project.pbxproj
      after_success:
        bash <(curl -s https://codecov.io/bash);
    - <<: *test
      xcode_destination: 'platform=iOS Simulator,OS=12.0,name=iPhone SE'
    - <<: *test
      xcode_destination: 'platform=Apple TV Simulator,OS=12.0,name=Apple TV'
