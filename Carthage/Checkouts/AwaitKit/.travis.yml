language: objective-c
osx_image: xcode9.2
env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - LANG=en_US.UTF-8
    - SCHEME="AwaitKit"
  matrix:
    - DESTINATION="OS=3.1,name=Apple Watch - 42mm" RUN_TESTS="NO"  RUN_CODECOV="NO"
    - DESTINATION="OS=2.0,name=Apple Watch - 42mm" RUN_TESTS="NO"  RUN_CODECOV="NO"

    - DESTINATION="OS=10.0,name=Apple TV 1080p"    RUN_TESTS="YES" RUN_CODECOV="NO"

    - DESTINATION="OS=10.0,name=iPhone 6s"         RUN_TESTS="YES" RUN_CODECOV="YES"
    - DESTINATION="OS=9.0,name=iPad 2"             RUN_TESTS="YES" RUN_CODECOV="YES"

    - DESTINATION="arch=x86_64,platform=macOS"     RUN_TESTS="YES" RUN_CODECOV="YES"
script:
  - set -o pipefail
  - git submodule update --init
  - xcodebuild -version

  # Build Framework in Debug and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
      travis_retry xcodebuild -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release GCC_GENERATE_TEST_COVERAGE_FILES=YES -enableCodeCoverage YES test | xcpretty;
    else
      travis_retry xcodebuild -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug build | xcpretty;
    fi

  # Build Framework in Release and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
      travis_retry xcodebuild -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release GCC_GENERATE_TEST_COVERAGE_FILES=YES -enableCodeCoverage YES test | xcpretty;
    else
      travis_retry xcodebuild -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty;
    fi
after_success:
  # Run the `codecov` service if specified
  - if [ $RUN_CODECOV == "YES" ]; then
      bash <(curl -s https://codecov.io/bash);
    fi
